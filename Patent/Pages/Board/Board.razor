@page "/board"
@inject IPostRepository PostRepository
@inject NavigationManager NavigationManager

<AnchorNavigation />

<body id="page-top">
    <header class="masthead">
        <div class="container px-4 px-lg-5 h-100">
            <div class="row gx-4 gx-lg-5 h-100 align-items-center justify-content-center text-center">
                <div class="col-lg-8 align-self-end">
                    <h1 class="text-white font-weight-bold">게시판입니다.</h1>
                    <hr class="divider" />
                </div>
                <div class="col-lg-8 align-self-baseline">
                    <p class="text-white-75 mb-5">게시판입니다.</p>
                    <a class="btn btn-primary btn-xl" href="#about">Find Out More</a>
                </div>
            </div>
        </div>
    </header>

    <div class="main-box">

        <div class="top-box">
            <div class="search-box">
                <SearchBox></SearchBox>
            </div>
        </div>


        <div class="board">
            <BoardComponent PagerBase="_pager" Posts="_posts">
                <FooterTemplate>
                    <Patent.Components.BoardComponents.Pagination Pager=_pager
                                                                  OnPageChangeCallback="OnPageChange">
                    </Patent.Components.BoardComponents.Pagination>
                </FooterTemplate>
            </BoardComponent>
        </div>
    </div>
</body>



@code {
    private IList<Post> _posts;
    private int _pageSize;
    private PagerBase _pager;
    private bool _first;

    protected override async Task OnInitializedAsync()
    {
        _pageSize = 10;

        var result = await PostRepository.GetPagePostAsync(0, _pageSize);
        _posts = result.Records.ToList();

        int recordCount = result.TotalRecords;
        _pager = new PagerBase
        {
            RecordCount = recordCount,
            PageSize = _pageSize, //페이지당 게시글 개수
            PageIndex = 0, //기본 시작 페이지
            PageNumber = 1,
            PageCount = (int)Math.Ceiling(recordCount / (double)_pageSize),
            PagerButtonCount = 5
        };
    }

    public async Task OnPageChange(int idx)
    {
        _pager.PageIndex = idx;
        _pager.PageNumber = idx + 1;
        var result = await PostRepository.GetPagePostAsync(idx, _pager.PageSize);
        _posts = result.Records.ToList();
        StateHasChanged();
    }

}

