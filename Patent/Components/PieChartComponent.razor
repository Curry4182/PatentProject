@page "/PieChart"


<Button @onclick="() => HandleRedraw()">Redraw</Button>

<PieChart @ref="pieChart" TItem="double" />

@code{
    PieChart<double> pieChart;

    [Parameter]
    public string[] Labels { get; set; }

    List<string> backgroundColors = new List<string> { ChartColor.FromRgba(255, 99, 132, 0.2f), ChartColor.FromRgba(54, 162, 235, 0.2f), ChartColor.FromRgba(255, 206, 86, 0.2f), ChartColor.FromRgba(75, 192, 192, 0.2f), ChartColor.FromRgba(153, 102, 255, 0.2f), ChartColor.FromRgba(255, 159, 64, 0.2f) };
    List<string> borderColors = new List<string> { ChartColor.FromRgba(255, 99, 132, 1f), ChartColor.FromRgba(54, 162, 235, 1f), ChartColor.FromRgba(255, 206, 86, 1f), ChartColor.FromRgba(75, 192, 192, 1f), ChartColor.FromRgba(153, 102, 255, 1f), ChartColor.FromRgba(255, 159, 64, 1f) };

    [Parameter]
    public List<double> ValueList { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await HandleRedraw();
        }
    }

    async Task HandleRedraw()
    {
        await pieChart.Clear();

        await pieChart.AddLabelsDatasetsAndUpdate(Labels, GetLineChartDataset());
    }

    PieChartDataset<double> GetLineChartDataset()
    {
        return new PieChartDataset<double>
        {
            Label = "# of randoms",
            Data = ValueList,
            BackgroundColor = backgroundColors,
            BorderColor = borderColors,
        };
    }


    protected override void OnInitialized()
    {
    }
}